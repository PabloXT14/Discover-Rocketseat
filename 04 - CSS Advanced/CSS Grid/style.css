/* ========= Global Styling ========== */
* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    font-family: 'Poppins', sans-serif;
}

/* =========== Other Stylings ==========  */
.title {
    text-align: center;
    margin: 20px 0;
    text-transform: uppercase;
    font-size: 50px;
    font-weight: 900;
    letter-spacing: 5px;
}

.title span {
    display: block;
    margin-bottom: -90px;
    font-size: 20px;
    letter-spacing: normal;
}

.item {
    background-color: #ffb920;
    border: 1.5px solid #111;
    border-radius: 7px;
    display: flex;
    align-items: center;
    justify-content: center;
    font-size: 20px;
    font-weight: 900;
    color: #111;
}

.item:hover {
    color: #FFF;
    cursor: pointer;
}


/* CONTAINER */
#container {
    width: 59vw;
    height: 60vh;
    margin: 0 auto;
    background-color: whitesmoke;
    outline: 8px solid #4834D4;

    display: grid;
    grid-template-columns: repeat(3, 1fr);/* especifica o tamanho de cada coluna e o nº de colunas*/
    /* auto: faz com que o espaço extra não preenchido pelas colunas seja preenchido por algum item*/
    /* fr: unidade de fração da grid, divide a grid em frações iguais de acordo com valor adicionado ao fr(1fr 1fr = 50% 50%)*/
    /* repeat(nº de columns/rows, unidade): ex: repeat(3, 1fr)*/
    /* minmax(value min, value max): especifica o tamanho máximo e mínimo que uma certa column ou row terá. ex: minmax(300px, 1fr)*/
    /* repeat(auto-fill, 300px): o "auto-fill" especifica que irá tentar preencher todo o espaço da grid, criando o máximo possível de columns com 300px(neste caso), "MESMO SE NÃO HOUVER ITENS PARA PREENCER TODA A GRID"(deixando colunas em branco na grid) */
    /* repeat(auto-fit, 300px): o "auto-fit" especifica que irá tentar preencher todo o espaço da grid, criando o máximo possível de columns com 300px(neste caso), "SÓ CRIA AS COLUNAS SE TIVERMOS ITENS PARA PREECHÊ-LAS" (não deixando colunas em branco na grid)*/
    /*nomes das linhas das columns: ex: grid-template-columns: [col-start] 1fr [col-2] 1fr [col-3] 1fr [col-end]*/

    /* grid-template-rows: 200px;especifica o tamanho de cada linha e o nº de linhas */
    /* grid-template-rows: 50px 100px; */

    /* grid-auto-columns and grid-auto-rows: server para definir o tamanho de linhas ou colunas que temos a mais no container, onde não foi definido o tamanho. ex: grid-auto-rows: 200px;
    */
    /* grid-auto-rows: 20px; */

    /*grid-auto-flow: controla como o algoritmo de arrumação automática funciona, especificando exatamente como os itens fluirão no grid, se um novo item adicionado vai ser colocado na sequencia da linha ou da coluna
        - row: arrumação automática em linha
        - column: arrumação automática em coluna
        - dense: determina que o algoritmo de arrumação automática use um formato de compactação "denso", que tenta preencher os espaços anteriores do grid caso receba itens menores após. Isto talvez deixe os itens fora de ordem, preenchendo espaços deixados por itens maiores.*/
    /* grid-auto-flow: dense; */

    /*grid-gap: define os espaços entre linhas e colunas.
        - grid-column-gap: espaçamento entre colunas
        - grid-row-gap: espaçamento entre linhas
        - grid-gap(shorthand): <all gras> OR <grid-row-gap> <grid-column-gap>
    */
    /* grid-row-gap: 10px;
    grid-column-gap: 30px;
    */ 
    grid-gap: 10px 20px;
}

.a {
    grid-column: 10;
}


/* ========= Respovirity ========== */
/* @media screen and (max-width: 770px) {
    #container {
        grid-template-columns: repeat(1, 1fr);
    }
} */



